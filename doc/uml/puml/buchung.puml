@startuml
!pragma useIntermediatePackages false
skinparam linetype ortho
show stereotype
package boundary as de.db.vendo.prototype.buchung.reservation.common.bce.boundary #green {}
package control as de.db.vendo.prototype.buchung.reservation.common.bce.boundary.control #red {}
package adapters as de.db.vendo.prototype.buchung.reservation.divers.adapters #gree {}
package confirm as de.db.vendo.prototype.buchung.reservation.divers.adapters.confirm #gree {}
package boundary as de.db.vendo.prototype.buchung.reservation.divers.adapters.confirm.boundary #gree {}
package dto as de.db.vendo.prototype.buchung.reservation.divers.adapters.confirm.boundary.dto #gree {}
package persistence as de.db.vendo.prototype.buchung.reservation.divers.adapters.persistence #gree {}
package boundary as de.db.vendo.prototype.buchung.reservation.divers.adapters.persistence.boundary #gree {}
package bridge as de.db.vendo.prototype.buchung.reservation.divers.adapters.persistence.boundary.bridge #gree {}
package reset as de.db.vendo.prototype.buchung.reservation.divers.adapters.reset #gree {}
package boundary as de.db.vendo.prototype.buchung.reservation.divers.adapters.reset.boundary #gree {}
package submit as de.db.vendo.prototype.buchung.reservation.divers.adapters.submit #gree {}
package boundary as de.db.vendo.prototype.buchung.reservation.divers.adapters.submit.boundary #gree {}
package use_cases as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases #gree {}
package confirm as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.confirm #gree {}
package boundary as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.confirm.boundary #gree {}
package dto as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.confirm.boundary.dto #gree {}
package entities as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities #gree {}
package confirm as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.confirm #gree {}
package boundary as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.confirm.boundary #gree {}
package control as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.confirm.boundary.control #red {}
package reservation as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation #gree {}
package boundary as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.boundary #gree {}
package control as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.boundary.control #red {}
package entity as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.boundary.control.entity #red {}
package trip as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip #gree {}
package boundary as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.boundary #gree {}
package control as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.boundary.control #red {}
package entity as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.boundary.control.entity #red {}
package station as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.station #gree {}
package boundary as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.station.boundary #gree {}
package control as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.station.boundary.control #red {}
package entity as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.station.boundary.control.entity #red {}
package train as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train #gree {}
package boundary as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.boundary #gree {}
package control as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.boundary.control #red {}
package entity as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.boundary.control.entity #red {}
package wagon as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.wagon #gree {}
package boundary as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.wagon.boundary #gree {}
package control as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.wagon.boundary.control #red {}
package entity as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.wagon.boundary.control.entity #red {}
package seat as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.wagon.seat #gree {}
package boundary as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.wagon.seat.boundary #gree {}
package control as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.wagon.seat.boundary.control #red {}
package entity as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.wagon.seat.boundary.control.entity #red {}
package reset as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reset #gree {}
package boundary as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reset.boundary #gree {}
package control as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reset.boundary.control #red {}
package submit as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.submit #gree {}
package boundary as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.submit.boundary #gree {}
package control as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.submit.boundary.control #red {}
package persistence as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.persistence #gree {}
package boundary as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.persistence.boundary #gree {}
package bridge as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.persistence.boundary.bridge #gree {}
package reset as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.reset #gree {}
package boundary as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.reset.boundary #gree {}
package submit as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.submit #gree {}
package boundary as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.submit.boundary #gree {}
package boundary as de.db.vendo.prototype.buchung.reservation.divers.persistence.boundary #green {}
package boundary as de.db.vendo.prototype.buchung.reservation.divers.web.confirm.boundary #green {}
package dto as de.db.vendo.prototype.buchung.reservation.divers.web.confirm.boundary.dto #green {}
package boundary as de.db.vendo.prototype.buchung.reservation.divers.web.reset.boundary #green {}
package boundary as de.db.vendo.prototype.buchung.reservation.divers.web.submit.boundary #green {}
package control as de.db.vendo.prototype.buchung.reservation.divers.web.submit.boundary.control #red {}
package entity as de.db.vendo.prototype.buchung.reservation.divers.web.submit.boundary.control.entity #red {}

interface "FunctionalService" as de.db.vendo.prototype.buchung.reservation.common.bce.boundary.FunctionalService<Input, Output> {
  + {abstract}Output serve(Input)
}
interface "Service" as de.db.vendo.prototype.buchung.reservation.common.bce.boundary.Service<Input> {
  + {abstract}void serve(Input)
}
interface "Component" as de.db.vendo.prototype.buchung.reservation.common.bce.boundary.control.Component<Input> {
  + {abstract}void execute(Input)
}
interface "FunctionalComponent" as de.db.vendo.prototype.buchung.reservation.common.bce.boundary.control.FunctionalComponent<Input, Output> {
  + {abstract}Output execute(Input)
}
interface "FunctionalUseCase" as de.db.vendo.prototype.buchung.reservation.common.usecase.FunctionalUseCase<Input, Output> {
  + {abstract}Output action(Input)
}
interface "UseCase" as de.db.vendo.prototype.buchung.reservation.common.usecase.UseCase<Input> {
  + {abstract}void action(Input)
}
class "ConfirmReservationResourceAdapter" as de.db.vendo.prototype.buchung.reservation.divers.adapters.confirm.boundary.ConfirmReservationResourceAdapter {
  +void serve(ConfirmReservationResourceAdapterDTO)
}
interface "AdapterToUseCaseMapper" as de.db.vendo.prototype.buchung.reservation.divers.adapters.confirm.boundary.dto.AdapterToUseCaseMapper {
  + {abstract}ReservationDTO toDTO(ConfirmReservationResourceAdapterDTO)
}
class "ConfirmReservationResourceAdapterDTO" as de.db.vendo.prototype.buchung.reservation.divers.adapters.confirm.boundary.dto.ConfirmReservationResourceAdapterDTO {
  +UUID getId()
  +String getStatus()
}
class "ReservationRepositoryAdapter" as de.db.vendo.prototype.buchung.reservation.divers.adapters.persistence.boundary.ReservationRepositoryAdapter {
  +Optional<ReservationDTO> findBy(UUID)
  +ReservationDTO save(ReservationDTO)
  +void submit(UUID)
  +void confirm(UUID)
  +void reset(UUID)
}
interface "ReservationRepositoryAdapterBridge" as de.db.vendo.prototype.buchung.reservation.divers.adapters.persistence.boundary.bridge.ReservationRepositoryAdapterBridge {
  + {abstract}Optional<String> findBy(UUID)
  + {abstract}String save(String)
  + {abstract}void submit(UUID)
  + {abstract}void confirm(UUID)
  + {abstract}void reset(UUID)
}
class "ResetReservationResourceAdapter" as de.db.vendo.prototype.buchung.reservation.divers.adapters.reset.boundary.ResetReservationResourceAdapter {
  +void serve(UUID)
}
class "SubmitReservationResourceAdapter" as de.db.vendo.prototype.buchung.reservation.divers.adapters.submit.boundary.SubmitReservationResourceAdapter {
  +String serve(String)
}
class "ConfirmUseCase" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.confirm.boundary.ConfirmUseCase {
  +void action(ReservationDTO)
}
class "ReservationDTO" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.confirm.boundary.dto.ReservationDTO {
  +UUID getId()
  +String getStatus()
}
interface "ReservationMapper" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.confirm.boundary.dto.ReservationMapper {
  + {abstract}Reservation toReservation(ReservationDTO)
}
class "ConfirmReservationService" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.confirm.boundary.ConfirmReservationService {
  +void serve(Reservation)
}
class "ConfirmReservationComponent" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.confirm.boundary.control.ConfirmReservationComponent {
  +void execute(Reservation)
}
interface "ReservationRepository" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.boundary.control.ReservationRepository {
  + {abstract}Optional<Reservation> findBy(ReservationId)
  + {abstract}Reservation save(Reservation)
  + {abstract}void submit(Reservation)
  + {abstract}void confirm(Reservation)
  + {abstract}void reset(Reservation)
}
class "Reservation" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.boundary.control.entity.Reservation {
  +ReservationId getId()
  +ReservationStatus getStatus()
}
class "ReservationId" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.boundary.control.entity.ReservationId {
  +UUID getId()
}
enum "ReservationStatus" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.boundary.control.entity.ReservationStatus {
  SUBMIT
  CONFIRM
  RESET
  __
  + {static}EnumEntries<ReservationStatus> getEntries()
}
class "Trip" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.boundary.control.entity.Trip {
  +TripId getId()
  +Station getOrigin()
  +Station getDestination()
  +List<Station> getStations()
  +Train getTrain()
  +Seat getSeat()
  +Wagon getWagon()
}
class "TripId" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.boundary.control.entity.TripId {
  +UUID getId()
}
class "Station" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.station.boundary.control.entity.Station {
  +StationId getId()
  +String getName()
}
class "StationId" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.station.boundary.control.entity.StationId {
  +UUID getId()
}
class "Train" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.boundary.control.entity.Train {
  +Train getId()
  +String getName()
}
class "TrainId" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.boundary.control.entity.TrainId {
  +UUID getId()
}
class "Wagon" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.wagon.boundary.control.entity.Wagon {
  +Wagon getId()
  +String getName()
  +String getNumber()
}
class "WagonId" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.wagon.boundary.control.entity.WagonId {
  +UUID getId()
}
class "Seat" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.wagon.seat.boundary.control.entity.Seat {
  +Seat getId()
  +String getName()
}
class "SeatId" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.wagon.seat.boundary.control.entity.SeatId {
  +UUID getId()
}
class "ResetReservationService" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reset.boundary.ResetReservationService {
  +void serve(ReservationId)
}
class "ResetReservationComponent" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reset.boundary.control.ResetReservationComponent {
  +void execute(ReservationId)
}
class "SubmitReservationService" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.submit.boundary.SubmitReservationService {
  +String serve(String)
}
class "SubmitReservationComponent" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.submit.boundary.control.SubmitReservationComponent {
  +String execute(String)
}
class "ReservationRepositoryUseCase" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.persistence.boundary.ReservationRepositoryUseCase {
  +Optional<Reservation> findBy(ReservationId)
  +Reservation save(Reservation)
  +void submit(Reservation)
  +void confirm(Reservation)
  +void reset(Reservation)
}
interface "ReservationRepositoryUseCaseBridge" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.persistence.boundary.bridge.ReservationRepositoryUseCaseBridge {
  + {abstract}Optional<ReservationDTO> findBy(UUID)
  + {abstract}ReservationDTO save(ReservationDTO)
  + {abstract}void submit(UUID)
  + {abstract}void confirm(UUID)
  + {abstract}void reset(UUID)
}
class "ResetUseCase" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.reset.boundary.ResetUseCase {
  ..
  +ResetReservationService resetReservation
  __
  +ResetReservationService getResetReservation()
  +void setResetReservation(ResetReservationService)
  +void action(UUID)
}
class "SubmitUseCase" as de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.submit.boundary.SubmitUseCase {
  +SubmitReservationService submitReservation
  __
  +SubmitReservationService getSubmitReservation()
  +void setSubmitReservation(SubmitReservationService)
  +String action(String)
}
class "ReservationRepositoryDriver" as de.db.vendo.prototype.buchung.reservation.divers.persistence.boundary.ReservationRepositoryDriver {
  +Optional<String> findBy(UUID)
  +String save(String)
  +void submit(UUID)
  +void confirm(UUID)
  +void reset(UUID)
}
class "ConfirmReservationResource" as de.db.vendo.prototype.buchung.reservation.divers.web.confirm.boundary.ConfirmReservationResource {
  +void serve(ConfirmReservationResourceDTO)
}
class "ConfirmReservationResourceDTO" as de.db.vendo.prototype.buchung.reservation.divers.web.confirm.boundary.dto.ConfirmReservationResourceDTO {
  +UUID getId()
  +String getStatus()
}
interface "ConfirmReservationResourceDTOMapper" as de.db.vendo.prototype.buchung.reservation.divers.web.confirm.boundary.dto.ConfirmReservationResourceDTOMapper {
  + {abstract}ConfirmReservationResourceAdapterDTO toDTO(ConfirmReservationResourceDTO)
}
class "ResetReservationResource" as de.db.vendo.prototype.buchung.reservation.divers.web.reset.boundary.ResetReservationResource {
  +void serve(UUID)
}
class "SubmitReservationResource" as de.db.vendo.prototype.buchung.reservation.divers.web.submit.boundary.SubmitReservationResource {
  +String serve(String)
}
class "ReservationReq" as de.db.vendo.prototype.buchung.reservation.divers.web.submit.boundary.control.entity.ReservationReq {
  +UUID getId()
  +String getTrainJourneyKey()
  +String getTrainNumber()
  +Optional<Integer> getTariffCode()
}
de.db.vendo.prototype.buchung.reservation.divers.adapters.confirm.boundary.ConfirmReservationResourceAdapter .u.|> de.db.vendo.prototype.buchung.reservation.common.bce.boundary.Service
de.db.vendo.prototype.buchung.reservation.divers.adapters.confirm.boundary.ConfirmReservationResourceAdapter --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.confirm.boundary.ConfirmUseCase
de.db.vendo.prototype.buchung.reservation.divers.adapters.confirm.boundary.ConfirmReservationResourceAdapter --> de.db.vendo.prototype.buchung.reservation.divers.adapters.confirm.boundary.dto.AdapterToUseCaseMapper
de.db.vendo.prototype.buchung.reservation.divers.adapters.persistence.boundary.ReservationRepositoryAdapter .u.|> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.persistence.boundary.bridge.ReservationRepositoryUseCaseBridge
de.db.vendo.prototype.buchung.reservation.divers.adapters.persistence.boundary.ReservationRepositoryAdapter --> de.db.vendo.prototype.buchung.reservation.divers.adapters.persistence.boundary.bridge.ReservationRepositoryAdapterBridge
de.db.vendo.prototype.buchung.reservation.divers.adapters.reset.boundary.ResetReservationResourceAdapter .u.|> de.db.vendo.prototype.buchung.reservation.common.bce.boundary.Service
de.db.vendo.prototype.buchung.reservation.divers.adapters.reset.boundary.ResetReservationResourceAdapter --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.reset.boundary.ResetUseCase
de.db.vendo.prototype.buchung.reservation.divers.adapters.submit.boundary.SubmitReservationResourceAdapter .u.|> de.db.vendo.prototype.buchung.reservation.common.bce.boundary.FunctionalService
de.db.vendo.prototype.buchung.reservation.divers.adapters.submit.boundary.SubmitReservationResourceAdapter --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.submit.boundary.SubmitUseCase
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.confirm.boundary.ConfirmUseCase .u.|> de.db.vendo.prototype.buchung.reservation.common.usecase.UseCase
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.confirm.boundary.ConfirmUseCase --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.confirm.boundary.dto.ReservationMapper
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.confirm.boundary.ConfirmUseCase --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.confirm.boundary.ConfirmReservationService
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.confirm.boundary.ConfirmReservationService .u.|> de.db.vendo.prototype.buchung.reservation.common.bce.boundary.Service
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.confirm.boundary.ConfirmReservationService --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.confirm.boundary.control.ConfirmReservationComponent
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.confirm.boundary.control.ConfirmReservationComponent .u.|> de.db.vendo.prototype.buchung.reservation.common.bce.boundary.control.Component
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.confirm.boundary.control.ConfirmReservationComponent --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.boundary.control.ReservationRepository
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.boundary.control.entity.Reservation --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.boundary.control.entity.ReservationId
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.boundary.control.entity.Reservation --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.boundary.control.entity.ReservationStatus
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.boundary.control.entity.Trip --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.boundary.control.entity.TripId
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.boundary.control.entity.Trip --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.station.boundary.control.entity.Station
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.boundary.control.entity.Trip --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.wagon.seat.boundary.control.entity.Seat
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.boundary.control.entity.Trip --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.boundary.control.entity.Train
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.boundary.control.entity.Trip --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.wagon.boundary.control.entity.Wagon
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.station.boundary.control.entity.Station --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.station.boundary.control.entity.StationId
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.boundary.control.entity.Train --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.boundary.control.entity.Train
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.wagon.boundary.control.entity.Wagon --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.wagon.boundary.control.entity.Wagon
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.wagon.seat.boundary.control.entity.Seat --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.trip.train.wagon.seat.boundary.control.entity.Seat
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reset.boundary.ResetReservationService .u.|> de.db.vendo.prototype.buchung.reservation.common.bce.boundary.Service
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reset.boundary.ResetReservationService --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reset.boundary.control.ResetReservationComponent
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reset.boundary.control.ResetReservationComponent .u.|> de.db.vendo.prototype.buchung.reservation.common.bce.boundary.control.Component
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reset.boundary.control.ResetReservationComponent --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.boundary.control.ReservationRepository
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.submit.boundary.SubmitReservationService .u.|> de.db.vendo.prototype.buchung.reservation.common.bce.boundary.FunctionalService
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.submit.boundary.SubmitReservationService --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.submit.boundary.control.SubmitReservationComponent
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.submit.boundary.control.SubmitReservationComponent .u.|> de.db.vendo.prototype.buchung.reservation.common.bce.boundary.control.FunctionalComponent
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.submit.boundary.control.SubmitReservationComponent --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.boundary.control.ReservationRepository
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.persistence.boundary.ReservationRepositoryUseCase .u.|> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reservation.boundary.control.ReservationRepository
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.persistence.boundary.ReservationRepositoryUseCase --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.persistence.boundary.bridge.ReservationRepositoryUseCaseBridge
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.reset.boundary.ResetUseCase .u.|> de.db.vendo.prototype.buchung.reservation.common.usecase.UseCase
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.reset.boundary.ResetUseCase --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.reset.boundary.ResetReservationService
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.submit.boundary.SubmitUseCase .u.|> de.db.vendo.prototype.buchung.reservation.common.usecase.FunctionalUseCase
de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.submit.boundary.SubmitUseCase --> de.db.vendo.prototype.buchung.reservation.divers.adapters.use_cases.entities.submit.boundary.SubmitReservationService
de.db.vendo.prototype.buchung.reservation.divers.persistence.boundary.ReservationRepositoryDriver .u.|> de.db.vendo.prototype.buchung.reservation.divers.adapters.persistence.boundary.bridge.ReservationRepositoryAdapterBridge
de.db.vendo.prototype.buchung.reservation.divers.web.confirm.boundary.ConfirmReservationResource .u.|> de.db.vendo.prototype.buchung.reservation.common.bce.boundary.Service
de.db.vendo.prototype.buchung.reservation.divers.web.confirm.boundary.ConfirmReservationResource --> de.db.vendo.prototype.buchung.reservation.divers.web.confirm.boundary.dto.ConfirmReservationResourceDTOMapper
de.db.vendo.prototype.buchung.reservation.divers.web.confirm.boundary.ConfirmReservationResource --> de.db.vendo.prototype.buchung.reservation.divers.adapters.confirm.boundary.ConfirmReservationResourceAdapter
de.db.vendo.prototype.buchung.reservation.divers.web.reset.boundary.ResetReservationResource .u.|> de.db.vendo.prototype.buchung.reservation.common.bce.boundary.Service
de.db.vendo.prototype.buchung.reservation.divers.web.reset.boundary.ResetReservationResource --> de.db.vendo.prototype.buchung.reservation.divers.adapters.reset.boundary.ResetReservationResourceAdapter
de.db.vendo.prototype.buchung.reservation.divers.web.submit.boundary.SubmitReservationResource .u.|> de.db.vendo.prototype.buchung.reservation.common.bce.boundary.FunctionalService
de.db.vendo.prototype.buchung.reservation.divers.web.submit.boundary.SubmitReservationResource --> de.db.vendo.prototype.buchung.reservation.divers.adapters.submit.boundary.SubmitReservationResourceAdapter
@enduml
